name: Python (Linter)

on: [push]

jobs:
  python-mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('server/src/requirements.dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install pip
        pip install -r server/src/requirements.dev.txt
    - name: Lint with mypy
      run: |
        cd server
        mypy src
    - uses: actions/upload-artifact@master
      if: always()
      with:
        name: reports
        path: ./server/reports

  python-black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/src/requirements.dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install pip
          pip install -r server/src/requirements.dev.txt
      - name: Lint with black
        run: |
          cd server
          black --diff --check src/ tests/

  python-flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/src/requirements.dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install pip
          pip install -r server/src/requirements.dev.txt
      - name: Lint with flake8
        run: |
          cd server
          flake8 src/ tests/
